package Presentacion;

import Negocio.ArbolAVL;
import Negocio.ArbolB;
import Negocio.ArbolBinarioBusqueda;
import Negocio.ArbolMViasBusqueda;
import Negocio.Excepcion.ExcepcionOrdenArbolInvalido;
import Negocio.IArbolBusqueda;
import Negocio.Palabra;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 */
public class Formulario extends javax.swing.JFrame {
    
    private IArbolBusqueda<Palabra> arbol;
    private File words;
    private int cantDatos;
    private int orden;

    /**
     * Creates new form Formulario
     *
     * @throws java.io.FileNotFoundException
     */
    public Formulario() throws FileNotFoundException {
        initComponents();
        this.setTitle("Dictionnaire");
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.orden = 3;
        this.words = new File("D:/UAGRM/semestre 05/Estructuras de datos 2/Proyectos/Proyecto ED2/src/Datos/words.txt");
        System.out.println(this.words);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        rBtnABB = new javax.swing.JRadioButton();
        rBtnAAVL = new javax.swing.JRadioButton();
        rBtnAMVias = new javax.swing.JRadioButton();
        rBtnAB = new javax.swing.JRadioButton();
        btnBuscar = new javax.swing.JButton();
        btnInsertar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        txtInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnMore = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        lbSize = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));
        setIconImages(null);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rBtnABB.setBackground(new java.awt.Color(240, 220, 220));
        btnGroup.add(rBtnABB);
        rBtnABB.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        rBtnABB.setForeground(new java.awt.Color(0, 0, 204));
        rBtnABB.setText("Arbol Binario de BÃºsqueda");
        rBtnABB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rBtnABBActionPerformed(evt);
            }
        });
        getContentPane().add(rBtnABB, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, -1, -1));

        btnGroup.add(rBtnAAVL);
        rBtnAAVL.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        rBtnAAVL.setForeground(new java.awt.Color(0, 0, 204));
        rBtnAAVL.setText("Arbol AVL");
        rBtnAAVL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rBtnAAVLActionPerformed(evt);
            }
        });
        getContentPane().add(rBtnAAVL, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, -1, -1));

        btnGroup.add(rBtnAMVias);
        rBtnAMVias.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        rBtnAMVias.setForeground(new java.awt.Color(0, 0, 204));
        rBtnAMVias.setText("Arbol M-Vias");
        rBtnAMVias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rBtnAMViasActionPerformed(evt);
            }
        });
        getContentPane().add(rBtnAMVias, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, -1, -1));

        btnGroup.add(rBtnAB);
        rBtnAB.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        rBtnAB.setForeground(new java.awt.Color(0, 0, 204));
        rBtnAB.setText("Arbol B");
        rBtnAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rBtnABActionPerformed(evt);
            }
        });
        getContentPane().add(rBtnAB, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, -1, -1));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 380, 60, 60));

        btnInsertar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        btnInsertar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });
        getContentPane().add(btnInsertar, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 380, 60, 60));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/remove.png"))); // NOI18N
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 380, 60, 60));

        txtInput.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        getContentPane().add(txtInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, 130, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Ingresar Palabra:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, 130, 20));

        jLabel3.setFont(new java.awt.Font("Sitka Small", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Resultado:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 400, 60, 22));

        btnMore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/mas.png"))); // NOI18N
        btnMore.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoreActionPerformed(evt);
            }
        });
        getContentPane().add(btnMore, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 380, 50, 60));

        txtOutput.setColumns(20);
        txtOutput.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        txtOutput.setForeground(new java.awt.Color(0, 153, 204));
        txtOutput.setRows(5);
        jScrollPane1.setViewportView(txtOutput);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 460, 520, 50));

        lbSize.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        getContentPane().add(lbSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 460, 40, 31));

        jLabel6.setBackground(new java.awt.Color(204, 0, 51));
        jLabel6.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 255));
        jLabel6.setText("DICTIONNAIRE");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 160, 30));

        jLabel7.setBackground(new java.awt.Color(204, 0, 51));
        jLabel7.setFont(new java.awt.Font("Snap ITC", 3, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("DICCIONARIO");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 360, 70));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Resultado:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, 100, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/francia.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, 80, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo2.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private int cargarDatosAlArbol() throws FileNotFoundException {
        
        int linea = 0;
        if (words.exists() && words.canRead()) {
            Scanner leerLinea = new Scanner(words);
            String lineaActual, word, traslate;
            while (leerLinea.hasNextLine()) {
                linea++;
                lineaActual = leerLinea.nextLine();
                word = lineaActual.substring(0, lineaActual.indexOf(":"));
                traslate = lineaActual.substring(lineaActual.indexOf(" ") + 1);
                Palabra palabraActual = new Palabra(word, traslate);
                this.arbol.insertar(palabraActual);
            }
            leerLinea.close();
        }
        return linea;
    }

    private int arbolEscogido() {
        if (rBtnABB.isSelected()) {
            return 0;
        }
        if (rBtnAAVL.isSelected()) {
            return 1;            
        }
        if (rBtnAMVias.isSelected()) {
            return 2;
        }
        if (rBtnAB.isSelected()) {
            return 3;
        }
        return -1;
    }
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (arbolEscogido() > -1) {
            String word = txtInput.getText();
            word = word.toLowerCase();
            Palabra palabra = arbol.getDatoEnNodo(new Palabra(word, ""));
            if (palabra != null) {
                txtOutput.setText(palabra.getDefinition());
            } else {
                JOptionPane.showMessageDialog(null, "Palabra no encontrada");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Escoja un Arbol !", "Advertencia !", 2);
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        if (arbolEscogido() > -1) {
            try {
                String word = JOptionPane.showInputDialog("Palabra: ");
                String traslate = JOptionPane.showInputDialog("Traduccion: ");
                word = word.toLowerCase();
                traslate.toLowerCase();
                boolean b = this.arbol.insertar(new Palabra(word, traslate));
                if (b) {
                    insertarAlFinalDelArchivo(word, traslate);
                    this.cantDatos++;
                     lbSize.setText(Integer.toString(this.cantDatos));
                    JOptionPane.showMessageDialog(null, "Palabra insertada correctamente");
                } else {
                    JOptionPane.showMessageDialog(null, "Palabra ya existente");
                }
            } catch (IOException ex) {
                Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Escoja un Arbol !", "Advertencia !", 2);
        }
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (arbolEscogido() > -1) {
            String word = txtInput.getText();
            boolean b = this.arbol.eliminar(new Palabra(word, ""));
            if (b) {
                JOptionPane.showMessageDialog(null, "Palabra eliminada correctamente");
            } else {
                JOptionPane.showMessageDialog(null, "La palabra no existe");
            }
            List<Palabra> recorridoPorNiveles = this.arbol.recorridoPorNiveles();
            try {
                cargarAlArchivo(recorridoPorNiveles);
            } catch (IOException ex) {
                Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.cantDatos--;
             lbSize.setText(Integer.toString(this.cantDatos));
        } else {
            JOptionPane.showMessageDialog(null, "Escoja un Arbol !", "Advertencia !", 2);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void rBtnAMViasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rBtnAMViasActionPerformed
        this.orden = Integer.parseInt(JOptionPane.showInputDialog("Orden: "));
        try {
            this.arbol = new ArbolMViasBusqueda<>(this.orden);
        } catch (ExcepcionOrdenArbolInvalido ex) {
            Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            this.cantDatos = cargarDatosAlArbol();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rBtnAMViasActionPerformed

    private void rBtnABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rBtnABActionPerformed
        this.orden = Integer.parseInt(JOptionPane.showInputDialog("Orden: "));
        try {
            this.arbol = new ArbolB<>(this.orden);
        } catch (ExcepcionOrdenArbolInvalido ex) {
            Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            this.cantDatos = cargarDatosAlArbol();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rBtnABActionPerformed

    private void rBtnAAVLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rBtnAAVLActionPerformed
        this.arbol = new ArbolAVL<>();
        try {
            this.cantDatos = cargarDatosAlArbol();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rBtnAAVLActionPerformed

    private void rBtnABBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rBtnABBActionPerformed
        this.arbol = new ArbolBinarioBusqueda<>();
        try {
            this.cantDatos = cargarDatosAlArbol();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rBtnABBActionPerformed

    private void btnMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoreActionPerformed
        if (arbolEscogido() > -1) {
        
            MasOpciones opcion = new MasOpciones(this, true);
            opcion.setVisible(true);
            int opcionEscogida = opcion.opcionEscogida;
            switch (opcionEscogida) {
                case 0:
                    this.arbol.vaciar();
                     {
                        try {
                            vaciar();
                        } catch (IOException ex) {
                            Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                     this.cantDatos=0;
                    break;
                case 1:
                    this.arbol.recorridoEnInOrden();
                    txtOutput.setText(arbol.recorridoEnInOrden().toString());
                    break;
                case 2:
                    this.arbol.recorridoEnPreOrden();
                    txtOutput.setText(arbol.recorridoEnPreOrden().toString());
                    break;
                case 3:
                    this.arbol.recorridoEnPostOrden();
                    txtOutput.setText(arbol.recorridoEnPostOrden().toString());
                    break;
                case 4:
                    this.arbol.recorridoPorNiveles();
                    txtOutput.setText(arbol.recorridoPorNiveles().toString());
                    break;
                case 5:
                    txtOutput.setText(Integer.toString(this.arbol.nivel()));
                    break;
            }
           lbSize.setText(Integer.toString(this.cantDatos));
        } else { 
            JOptionPane.showMessageDialog(null, "Escoja un Arbol !", "Advertencia !", 2);
        }
    }//GEN-LAST:event_btnMoreActionPerformed
    
    private void insertarAlFinalDelArchivo(String word, String traslate) throws IOException {
        if (words.exists() && words.canWrite()) {
            FileWriter lineaActual = new FileWriter(words, true);
            lineaActual.write("\n" + word + ": " + traslate);
            lineaActual.close();
        }
    }
    
    private void cargarAlArchivo(List<Palabra> recorridoPorNiveles) throws IOException {
        String nuevoContenidoDeArchivo = "";
        if (words.exists() && words.canWrite()) {
            for (int i = 0; i < recorridoPorNiveles.size(); i++) {
                nuevoContenidoDeArchivo = nuevoContenidoDeArchivo + recorridoPorNiveles.get(i).toString() + '\n';
            }
            nuevoContenidoDeArchivo = nuevoContenidoDeArchivo.substring(0, nuevoContenidoDeArchivo.length() - 1);
            FileWriter f = new FileWriter(words);
            f.write(nuevoContenidoDeArchivo);
            f.close();
        }
        
    }
    
    private void vaciar() throws IOException {
        FileWriter a = new FileWriter(words);
        a.write("");
        a.close();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new Formulario().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnMore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbSize;
    private javax.swing.JRadioButton rBtnAAVL;
    private javax.swing.JRadioButton rBtnAB;
    private javax.swing.JRadioButton rBtnABB;
    private javax.swing.JRadioButton rBtnAMVias;
    private javax.swing.JTextField txtInput;
    private javax.swing.JTextArea txtOutput;
    // End of variables declaration//GEN-END:variables

}
